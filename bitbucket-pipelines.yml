image: node:22

clone:
  depth: full

definitions:
  services:
    docker:
      memory: 4096
  caches:
    pnpm: $BITBUCKET_CLONE_DIR/.pnpm-store
    sonar: ~/.sonar/cache
  scripts:
    - script: &aws export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token;
        echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
    - script: &pnpm-install corepack enable;
        corepack prepare pnpm@latest-9 --activate;
        pnpm install
  steps:
    - step: &sonar
        name: TypeCheck, Coverage, Sonar & Lint
        oidc: true
        size: 2x
        caches:
          - pnpm
          - sonar
        script:
          - *aws
          - *pnpm-install
          - AWS_REGION=us-east-1 pnpm sst build --stage dev
          - pnpm typecheck
          - pnpm coverage
          - pipe: sonarsource/sonarcloud-scan:4.0.0
            variables:
              EXTRA_ARGS: >
                -Dsonar.organization=${SONAR_ORGANIZATION}
                -Dsonar.projectKey=ec2-leaser
                -Dsonar.projectName=ec2-leaser
                -Dsonar.exclusions=src/components/ui/**
                -Dsonar.sources=src
                -Dsonar.tests=test
                -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
                -Dsonar.testExecutionReportPaths=./sonar-report.xml
                -Dsonar.issue.ignore.multicriteria=next1,next2,next3
                -Dsonar.issue.ignore.multicriteria.next1.ruleKey=typescript:S100
                -Dsonar.issue.ignore.multicriteria.next1.resourceKey=**/route.ts
                -Dsonar.issue.ignore.multicriteria.next2.ruleKey=typescript:S3317
                -Dsonar.issue.ignore.multicriteria.next2.resourceKey=**/page.tsx
                -Dsonar.issue.ignore.multicriteria.next3.ruleKey=typescript:S3317
                -Dsonar.issue.ignore.multicriteria.next3.resourceKey=**/layout.tsx
              SONAR_SCANNER_OPTS: -Xmx2048m
          - pnpm lint

pipelines:
  pull-requests:
    '**':
      - step: *sonar

  branches:
    main:
      - step: *sonar
      - parallel:
          - step:
              name: Sync to GitHub
              script:
                - git push --mirror git@github.com:wiiisdom/ec2-leaser.git
          - step:
              name: Deploy to production
              caches:
                - pnpm
              oidc: true
              deployment: production
              script:
                - *aws
                - *pnpm-install
                - AWS_REGION=eu-central-1 pnpm sst deploy --stage prod
          - step:
              name: Deploy to demo
              caches:
                - pnpm
              oidc: true
              deployment: demo
              script:
                - *aws
                - *pnpm-install
                - AWS_REGION=us-east-1 pnpm sst deploy --stage demo

  custom:
    dtrack:
      - step:
          name: Dependency Track
          script:
            - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
            - trivy fs --format cyclonedx --output bom.json .
            - >
              curl -s -S -f -X POST "${DTRACK_URL}/v1/bom" -H "X-Api-Key: ${DTRACK_API_KEY}"
              -H "Content-Type: multipart/form-data" -F "project=${DTRACK_PROJECT_ID}"
              -F "bom=@bom.json"
          artifacts:
            - bom.json
